services:
  db:
    image: postgis/postgis:15-3.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nginx_default
  backend:
    build: ./backend
    command: >
      bash -c "python manage.py flush --no-input &&
      python manage.py migrate &&
      python manage.py generate_fixtures &&
      gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 3;"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgis://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ENV=${DJANGO_ENV:-development}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - nginx_default
  frontend:
    build: ./frontend
    command: node .output/server/index.mjs
    volumes:
      - ./frontend:/app
    environment:
      - BACKEND_URL=backend:8000
    depends_on:
      - backend
    networks:
      - nginx_default

networks:
  nginx_default:
    external: true

volumes:
  postgres_data:
